basePath: /api/v1
definitions:
  entities.EmailBody:
    properties:
      email:
        example: test@test.com
        type: string
    required:
    - email
    type: object
  entities.UidBody:
    properties:
      uid:
        example: 0MhHcnVNBMeCIygoBHDDt0SvT053
        type: string
    required:
    - uid
    type: object
  entities.UserDetails:
    properties:
      disabled:
        example: false
        type: boolean
      email:
        example: test@test.com
        type: string
      emailVerified:
        example: false
        type: boolean
      name:
        example: TEST
        maxLength: 24
        minLength: 3
        type: string
      password:
        example: testpassword
        minLength: 6
        type: string
      phoneNumber:
        example: "+911234567890"
        type: string
      photoURL:
        example: https://example.com/photo.jpg
        type: string
      uid:
        example: 0MhHcnVNBMeCIygoBHDDt0SvT053
        type: string
    required:
    - disabled
    - email
    - emailVerified
    - name
    - password
    - phoneNumber
    type: object
host: localhost:8181
info:
  contact: {}
  description: This is a wrapper for the OpenWeatherMap API.
  title: Weather Wrapper API
  version: "1.0"
paths:
  /geocode:
    get:
      consumes:
      - application/json
      description: Get geocoding for a given city
      parameters:
      - description: City
        in: query
        name: city
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get geocoding
      tags:
      - geocode
  /geocode/reverse:
    get:
      consumes:
      - application/json
      description: Get city from latitude and longitude
      parameters:
      - description: Latitude
        in: query
        name: lat
        required: true
        type: string
      - description: Longitude
        in: query
        name: long
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get city
      tags:
      - geocode
  /users/{uid}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: User ID
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Delete user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user
      parameters:
      - description: User ID
        in: path
        name: uid
        required: true
        type: string
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entities.UserDetails'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Update user
      tags:
      - users
  /users/reset-password:
    post:
      consumes:
      - application/json
      description: Send a verification email to reset password
      parameters:
      - description: Email body
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/entities.EmailBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Reset password
      tags:
      - users
  /users/signup:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entities.UserDetails'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create user
      tags:
      - users
  /users/token:
    post:
      consumes:
      - application/json
      description: Generate a token
      parameters:
      - description: Token body
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/entities.UidBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Generate token
      tags:
      - users
  /users/verify:
    post:
      consumes:
      - application/json
      description: Send a verification email
      parameters:
      - description: Email body
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/entities.EmailBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Send verification email
      tags:
      - users
  /weather/forecast:
    get:
      consumes:
      - application/json
      description: Get 5-day forecast for a given latitude and longitude
      parameters:
      - description: Latitude
        in: query
        name: lat
        required: true
        type: string
      - description: Longitude
        in: query
        name: long
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get 5-day forecast
      tags:
      - weather
  /weather/now:
    get:
      consumes:
      - application/json
      description: Get current weather for a given latitude and longitude
      parameters:
      - description: Latitude
        in: query
        name: lat
        required: true
        type: string
      - description: Longitude
        in: query
        name: long
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get current weather
      tags:
      - weather
swagger: "2.0"
